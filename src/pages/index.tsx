import Head from "next/head";
import Link from "next/link";
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
import LineChart from "./components/LineChart";
import CurrentReport from "./components/CurrentReport";
import ForecastTable from "./components/ForecastTable";
import LoadingFull from "./components/LoadingFull";
dayjs.extend(utc);

import { api } from "../utils/api";

const Home = () => {
  const stitesID = "13338500";
  const riverData = api.forecast.getForecast.useQuery({ siteId: stitesID });

  if (riverData.status !== "success") {
    return <LoadingFull />;
  }

  const observedData =
    riverData.data?.observation
      .map((e) => {
        const date = new Date(e.date);
        return {
          date: dayjs(date).format("ddd MM/D h:mm A"),
          cfs: e.cfs,
          ft: e.ft,
        };
      })
      .filter((e) => {
        if (e.cfs > 0) {
          return e;
        }
      }) || [];

  const lastObserved =
    observedData?.filter((el, i, arr) => i === arr.length - 1) || [];

  const forecastData =
    riverData.data?.forecast.map((e) => {
      const date = new Date(e.date);

      return {
        date: dayjs(date).format("ddd MM/D h:mm A"),
        cfs: e.cfs,
        ft: e.ft,
      };
    }) || [];

  const forecastTableData =
    riverData.data?.forecast
      .map((e) => {
        return {
          date: dayjs(e.date).utc().format("ddd MM/D h:mm A"),
          cfs: e.cfs,
          ft: e.ft,
        };
      })
      .filter((data) => {
        const dateParts = data.date.split(" ");
        return dateParts[2] === "12:00" && dateParts[3] === "PM";
      }) || [];

  const siteName = riverData.data?.siteName || "";

  return (
    <>
      <Head>
        <title>South Fork Clearwater</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto min-h-screen">
        <CurrentReport spot={siteName} level={lastObserved[0]} />
        <LineChart
          forecastData={forecastData}
          observedData={observedData}
          lastObserved={lastObserved}
        />
        {/* <ForecastTable forecastData={forecastTableData} /> */}
      </main>
    </>
  );
};

export default Home;
